{"version":3,"sources":["components/box/index.js","components/grid/index.js","components/buttons/index.js","components/main/index.js","App.js","index.js"],"names":["Box","boxClass","id","selectBox","row","col","className","role","onClick","aria-label","tabIndex","onKeyDown","Grid","cols","gridFull","width","rowsArr","map","rowArr","rowIdx","item","colIdx","boxId","key","style","Buttons","playButton","pauseButton","clear","slow","fast","seed","gridSize","ButtonToolbar","Button","type","DropdownButton","title","onSelect","e","Dropdown","Item","eventKey","Main","rows","speed","state","generation","Array","fill","setState","Math","floor","random","clearInterval","intervalId","setInterval","play","grid","size","g","g2","arrayClone","i","j","count","arr","JSON","parse","stringify","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.950354d9.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Box = ({ boxClass, id, selectBox, row, col }) => (\n  <div\n    className={boxClass}\n    id={id}\n    role=\"button\"\n    onClick={() => selectBox(row, col)}\n    aria-label=\"Box\"\n    tabIndex=\"0\"\n    onKeyDown\n  />\n);\n\nBox.propTypes = {\n  boxClass: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  selectBox: PropTypes.func.isRequired,\n  row: PropTypes.number.isRequired,\n  col: PropTypes.number.isRequired\n};\n\nexport default Box;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Box from \"../box\";\n\nconst Grid = ({ cols, selectBox, gridFull }) => {\n  const width = cols * 14;\n\n  let boxClass = \"\";\n  const rowsArr = gridFull.map((rowArr, rowIdx) =>\n    rowArr.map((item, colIdx) => {\n      const boxId = `${rowIdx}_${colIdx}`;\n\n      boxClass = gridFull[rowIdx][colIdx] ? \"box on\" : \"box off\";\n      return (\n        <Box\n          boxClass={boxClass}\n          key={boxId}\n          boxId={boxId}\n          row={rowIdx}\n          col={colIdx}\n          selectBox={selectBox}\n        />\n      );\n    })\n  );\n  return (\n    <div className=\"grid\" style={{ width }}>\n      {rowsArr}\n    </div>\n  );\n};\n\nGrid.propTypes = {\n  cols: PropTypes.number.isRequired,\n  selectBox: PropTypes.string.isRequired,\n  gridFull: PropTypes.arrayOf().isRequired\n};\n\nexport default Grid;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ButtonToolbar,\n  Dropdown,\n  Button,\n  DropdownButton\n} from \"react-bootstrap\";\n\nconst Buttons = ({\n  playButton,\n  pauseButton,\n  clear,\n  slow,\n  fast,\n  seed,\n  gridSize\n}) => (\n  <div className=\"center\">\n    <ButtonToolbar>\n      <Button className=\"btn btn-default\" onClick={playButton}>\n        play\n      </Button>\n      <Button className=\"btn btn-default\" onClick={pauseButton}>\n        pause\n      </Button>\n      <Button className=\"btn btn-default\" type=\"button\" onClick={clear}>\n        clear\n      </Button>\n      <Button className=\"btn btn-default\" type=\"button\" onClick={slow}>\n        slow\n      </Button>\n      <Button className=\"btn btn-default\" type=\"button\" onClick={fast}>\n        fast\n      </Button>\n      <Button className=\"btn btn-default\" type=\"button\" onClick={seed}>\n        seed\n      </Button>\n      <DropdownButton\n        title=\"Grid Size\"\n        id=\"size-menu\"\n        onSelect={e => gridSize(e)}\n      >\n        <Dropdown.Item eventKey=\"1\">20 X 10</Dropdown.Item>\n        <Dropdown.Item eventKey=\"2\">50 X 30</Dropdown.Item>\n        <Dropdown.Item eventKey=\"3\">70 X 70</Dropdown.Item>\n      </DropdownButton>\n    </ButtonToolbar>\n  </div>\n);\nButtons.propTypes = {\n  playButton: PropTypes.func.isRequired,\n  pauseButton: PropTypes.func.isRequired,\n  clear: PropTypes.func.isRequired,\n  slow: PropTypes.func.isRequired,\n  fast: PropTypes.func.isRequired,\n  seed: PropTypes.func.isRequired,\n  gridSize: PropTypes.func.isRequired\n};\nexport default Buttons;\n","import React, { Component } from \"react\";\nimport Grid from \"../grid\";\nimport Buttons from \"../buttons\";\nimport \"./style.css\";\n\nclass Main extends Component {\n  rows = 30;\n\n  cols = 50;\n\n  speed = 100;\n\n  state = {\n    generation: 0,\n    gridFull: Array(this.rows)\n      .fill()\n      .map(() => Array(this.cols).fill(false))\n  };\n\n  componentDidMount() {\n    this.seed();\n    this.playButton();\n  }\n\n  selectBox = (row, col) => {\n    const { gridFull: prevGrid } = this.state;\n    const gridFull = prevGrid.map((rowArr, rowIdx) =>\n      rowArr.map((item, colIdx) =>\n        rowIdx === row && colIdx === col ? !item : item\n      )\n    );\n    this.setState(() => ({ gridFull }));\n  };\n\n  seed = () => {\n    const { gridFull: prevGrid } = this.state;\n    const gridFull = prevGrid.map(rowArr =>\n      rowArr.map(() => Math.floor(Math.random() * 4) === 1)\n    );\n    this.setState(() => ({ gridFull }));\n  };\n\n  playButton = () => {\n    clearInterval(this.intervalId);\n    this.intervalId = setInterval(this.play, this.speed);\n  };\n\n  pauseButton = () => clearInterval(this.intervalId);\n\n  slow = () => {\n    this.speed = this.speed + 100;\n    this.playButton();\n  };\n\n  fast = () => {\n    this.speed = this.speed - 100;\n    this.playButton();\n  };\n\n  clear = () => {\n    const grid = Array(this.rows)\n      .fill()\n      .map(() => Array(this.cols).fill(false));\n    this.setState({ gridFull: grid, generation: 0 });\n  };\n\n  gridSize = size => {\n    switch (size) {\n      case \"1\":\n        this.cols = 20;\n        this.rows = 10;\n        break;\n      case \"2\":\n        this.cols = 50;\n        this.rows = 30;\n        break;\n      default:\n        this.cols = 70;\n        this.rows = 50;\n    }\n    this.clear();\n  };\n\n  play = () => {\n    const { gridFull: g, generation } = this.state;\n    const g2 = this.arrayClone(g);\n\n    for (let i = 0; i < this.rows; i += 1) {\n      for (let j = 0; j < this.cols; j += 1) {\n        let count = 0;\n        if (i > 0) if (g[i - 1][j]) count += 1;\n        if (i > 0 && j > 0) if (g[i - 1][j - 1]) count += 1;\n        if (i > 0 && j < this.cols - 1) if (g[i - 1][j + 1]) count += 1;\n        if (j < this.cols - 1) if (g[i][j + 1]) count += 1;\n        if (j > 0) if (g[i][j - 1]) count += 1;\n        if (i < this.rows - 1) if (g[i + 1][j]) count += 1;\n        if (i < this.rows - 1 && j > 0) if (g[i + 1][j - 1]) count += 1;\n        if (i < this.rows - 1 && this.cols - 1) if (g[i + 1][j + 1]) count += 1;\n        if (g[i][j] && (count < 2 || count > 3)) g2[i][j] = false;\n        if (!g[i][j] && count === 3) g2[i][j] = true;\n      }\n    }\n    this.setState({\n      gridFull: g2,\n      generation: generation + 1\n    });\n  };\n\n  arrayClone = arr => JSON.parse(JSON.stringify(arr));\n\n  render() {\n    const { generation, gridFull } = this.state;\n    return (\n      <div>\n        <h1>The Game of Life</h1>\n        <Buttons\n          playButton={this.playButton}\n          pauseButton={this.pauseButton}\n          slow={this.slow}\n          fast={this.fast}\n          clear={this.clear}\n          seed={this.seed}\n          gridSize={this.gridSize}\n        />\n        <Grid\n          gridFull={gridFull}\n          rows={this.rows}\n          cols={this.cols}\n          selectBox={this.selectBox}\n        />\n        <h2>Generation: {generation}</h2>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport \"./App.css\";\nimport Main from \"./components/main\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}